// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(uuid())
  username       String     @unique
  password       String
  name           String
  email          String     @unique
  phoneNumber    String
  profilePicture String
  reviews         Review[]
  bookings       Booking[]
}

model Host {
  id             String @id @default(uuid())
  username       String @unique
  password       String
  name           String
  email          String @unique
  phoneNumber    String
  profilePicture String
  aboutMe        String
  properties     Property[]
}

model Property {
  id            String    @id @default(uuid())
  title         String
  description   String
  location      String
  pricePerNight Decimal @db.Decimal(10,2)
  bedroomCount  Int
  bathRoomCount Int
  maxGuestCount Int
  hostId        String
  rating        Int
  bookings      Booking[]
  reviews        Review[]
  host          Host @relation(fields: [hostId], references: [id])
  amenities  PropertyAmenity[]
}

model Review {
  id         String @id @default(uuid())
  userId     String
  propertyId String
  rating     Int
  comment    String
  user       User     @relation(fields: [userId], references: [id])
  property   Property @relation(fields: [propertyId], references: [id])
}

model Booking {
  id             String   @id @default(uuid())
  userId         String
  propertyId     String
  checkinDate    DateTime
  checkoutDate   DateTime
  numberOfGuests Int
  totalPrice     Float
  bookingStatus  String
  user           User     @relation(fields: [userId], references: [id])
  property       Property @relation(fields: [propertyId], references: [id])
}

model Amenity {
  id   String @id @default(uuid())
  name String
  propertyAmenities      PropertyAmenity[]
}

model PropertyAmenity {
  property   Property @relation(fields: [propertyId], references: [id])
  propertyId String
  amenity    Amenity @relation(fields: [amenityId], references: [id])
  amenityId  String

  @@id([propertyId, amenityId])
}